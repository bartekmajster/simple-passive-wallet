generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  uuid                 String           @id @default(uuid())
  createdAt            DateTime         @default(now())
  email                String           @unique
  name                 String
  password             String
  confirmationCodeHash String?          @unique
  defaultCurrency      Currency         @default(USD)
  introductionStep     IntroductionStep @default(DefaultCurrency)
  sessions             Session[]
  cashAccounts         CashAccount[]
  portfolios           Portfolio[]
  subscription         Subscription     @default(FREE)
}

model Session {
  name      String
  rtHash    String   @unique
  updatedAt DateTime @default(now())
  user      User     @relation(fields: [userUuid], references: [uuid])
  userUuid  String
}

model CashAccount {
  uuid       String                 @id @default(uuid())
  name       String
  balance    Float                  @default(0)
  currency   Currency
  user       User                   @relation(fields: [userUuid], references: [uuid])
  userUuid   String
  operations CashAccountOperation[] @relation()

  @@unique([userUuid, uuid])
}

model CashAccountOperation {
  uuid            String                   @id @default(uuid())
  cashAccount     CashAccount              @relation(fields: [cashAccountUuid], references: [uuid])
  cashAccountUuid String
  date            DateTime                 @default(now())
  type            CashAccountOperationType
  amount          Float
  portfolio       Portfolio?               @relation(fields: [portfolioUuid], references: [uuid])
  portfolioUuid   String?
}

model Portfolio {
  uuid                  String                 @id @default(uuid())
  name                  String
  user                  User                   @relation(fields: [userUuid], references: [uuid])
  userUuid              String
  transactions          Transaction[]
  cashAccountOperations CashAccountOperation[]

  @@unique([userUuid, uuid])
}

model Transaction {
  uuid           String        @id @default(uuid())
  date           DateTime
  type           OperationType
  quantity       Float
  price          Float
  commission     Float
  portfolio      Portfolio     @relation(fields: [portfolioUuid], references: [uuid])
  portfolioUuid  String
  instrument     Instrument    @relation(fields: [instrumentUuid], references: [uuid])
  instrumentUuid String
}

model Instrument {
  uuid         String         @id @default(uuid())
  codeExchange String         @unique
  name         String
  type         InstrumentType
  currency     Currency
  transactions Transaction[]
}

enum Subscription {
  FREE
  LITE
  EXPERT
}

enum CashAccountOperationType {
  deposit
  withdrawal
  transfer
  interest
  tax
  fee
  other
}

enum InstrumentType {
  stocks
  bonds
  governmentBonds
  etfs
  options
  commodities
  crypto
  immovables
  movables
  others
}

enum Currency {
  USD
  EUR
  JPY
  GBP
  CNY
  AUD
  CAD
  CHF
  HKD
  SGD
  SEK
  KRW
  NOK
  NZD
  INR
  MXN
  TWD
  ZAR
  BRL
  DKK
  PLN
  THB
  ILS
  IDR
  CZK
  AED
  TRY
  HUF
  CLP
  SAR
  PHP
  MYR
  COP
  RUB
  RON
  PEN
  BHD
  BGN
  ARS
}

enum IntroductionStep {
  DefaultCurrency
  CashAccounts
  Portfolios
  Completed
}

enum OperationType {
  deposit
  withdrawal
  transfer
  buy
  sell
  dividend
  interest
  tax
  fee
  other
}
